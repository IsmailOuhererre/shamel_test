"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
from urllib.parse import quote_plus
import dj_database_url
from dotenv import load_dotenv
import os

load_dotenv()  # Load environment variables

SECRET_KEY = os.getenv("SECRET_KEY")


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Default Django authentication
]





# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-qqn8l9gr-1f7up*n4l0y=6o1!bgy87$#fa_=cpvz3k1v3f9e$#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Your apps
    'backend.apps.authentication.apps.AuthenticationConfig',
    'backend.apps.courses.apps.CoursesConfig',
    'backend.apps.payments.apps.PaymentsConfig',
    'backend.apps.leaderboard.apps.LeaderboardConfig',
    'backend.apps.classrooms.apps.ClassroomsConfig',
    'backend.apps.contracts.apps.ContractsConfig',
    'backend.apps.chat.apps.ChatConfig',
    'rest_framework_simplejwt.token_blacklist',
     'backend.apps.achievements',
     'djongo',

    # other apps...
]
AUTH_USER_MODEL =   'authentication.User'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    
}


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=15),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,
    
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    
    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# Email settings
# Add these settings to your settings.py file
APP_NAME = "ShamelApp"
# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Change to your email provider's SMTP server
EMAIL_PORT = 587
EMAIL_USE_TLS = True

EMAIL_HOST_USER = 'i_ouhererre@estin.dz'  # Change to your email address
EMAIL_HOST_PASSWORD = 'cdrf qcyx dpba tjvb'  
DEFAULT_FROM_EMAIL = 'ShameLapp <i_ouhererre@estin.dz>'  # Change to your email address

# Verification code expiration (30 minutes)
VERIFICATION_CODE_EXPIRE_MINUTES = 30
ONESIGNAL_APP_ID = 'your-app-id'
ONESIGNAL_REST_API_KEY = 'your-api-key'
WSGI_APPLICATION = 'backend.wsgi.application'
APPLICATION_FEE_PERCENTAGE = float(os.getenv('APPLICATION_FEE_PERCENTAGE', 5)) 


CHARGILY_CONFIG = {
    'MODE': os.getenv('CHARGILY_MODE', 'test'),  # 'test' or 'live'
    'API_KEY': os.getenv('CHARGILY_API_KEY'),
    'SECRET_KEY': os.getenv('CHARGILY_SECRET_KEY'),
        'PLATFORM_ACCOUNT_ID': 'your_platform_account_id',
    'BASE_URL': 'https://api.chargily.com/' if os.getenv('CHARGILY_MODE') == 'live' else 'https://test.chargily.com/',
        # Replace with your actual platform account ID
    'WEBHOOK_SECRET': os.getenv('CHARGILY_WEBHOOK_SECRET'),
    'FRONTEND_URL': os.getenv('FRONTEND_URL', 'yourapp://'),
    'BACKEND_URL': os.getenv('BACKEND_URL', 'http://192.168.0.194:8000'),
   
}


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
DATABASES = {
    'default': dj_database_url.config(
        default=os.getenv('DATABASE_URL'),
        conn_max_age=600,
    )
}


# Fallback to your local settings if needed
if not DATABASES['default']:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.getenv('PGDATABASE', 'shamel_db'),
            'USER': os.getenv('PGUSER', 'postgres'),
            'PASSWORD': os.getenv('PGPASSWORD', '01'),
            'HOST': os.getenv('PGHOST', 'localhost'),
            'PORT': os.getenv('PGPORT', '5432'),
        }
    }
# MongoDB Atlas Configuration for geospatial queries
MONGO_USER = quote_plus(os.getenv('MONGO_ATLAS_USER', ''))
MONGO_PASS = quote_plus(os.getenv('MONGO_ATLAS_PASSWORD', ''))
MONGO_CLUSTER = os.getenv('MONGO_ATLAS_CLUSTER', '')
MONGO_DB_NAME = os.getenv('MONGO_ATLAS_DB_NAME', 'classroom_locator')

DATABASES['mongodb'] = {
    'ENGINE': 'djongo',
        'NAME': 'shameldb',  # MongoDB database name
        'ENFORCE_SCHEMA': False,
        'CLIENT': {
            'host': 'mongodb+srv://ouhererreismail:shameldb@shameldb.xeecf5b.mongodb.net/?retryWrites=true&w=majority&appName=shameldb',
            'tls': True,
            'tlsAllowInvalidCertificates': False,
            'authSource': 'admin'
        },
}

# Database Router
DATABASE_ROUTERS = ['backend.db_routers.MongoDBRouter']




# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Default session engine (using DB-backed sessions)
ALLOWED_HOSTS = ['192.168.0.194', 'localhost', '127.0.0.1', '*']


